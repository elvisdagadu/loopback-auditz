{"version":3,"sources":["auditz.js"],"names":["assert","require","debug","warn","options","rest","silenceWarnings","Object","compare","obj1","obj2","p","hasOwnProperty","toString","Model","bootOptions","modelName","app","createdAt","updatedAt","deletedAt","createdBy","updatedBy","deletedBy","softDelete","unknownUser","remoteCtx","scrub","required","validateUpsert","revisions","name","idType","dataSource","autoUpdate","revisionsModelName","properties","definition","idName","scrubbed","propertiesToScrub","Array","isArray","filter","prop","reduce","obj","settings","pluralModelName","defineProperty","type","Date","defaultFn","String","observe","ctx","next","currentUser","accessToken","userId","getApp","err","a","ipForwarded","ip","groups","saveGroups","count","delete","forEach","group","createOrUpdateRevision","length","isNewInstance","models","create","action","table_name","row_id","instance","id","old","new","user","ip_forwarded","oldInstance","oldInstances","entries","map","inst","updatedIds","newInst","query","where","inq","find","error","newInstances","data","cloneKey","key","from","to","parts","split","toObject","fromObject","index","cb","rec","recNew","JSON","parse","recOld","console","log","getOldInstance","req","args","findById","deleted","result","skipUpdatedAt","keyAt","keyBy","destroyAll","softDestroyAll","opt","callback","undefined","newOpt","updateAll","then","catch","reject","remove","deleteAll","destroyById","softDestroyById","removeById","deleteById","prototype","destroy","softDestroy","updateAttributes","queryNonDeleted","_findOrCreate","findOrCreate","findOrCreateDeleted","and","call","_find","findDeleted","_count","countDeleted","whereNotDeleted","_update","update","updateDeleted","_setupRevisionsModel","opts","dsName","rowIdType","_createModel","revisionsDef","s","plural","revisionsModel","dataSources","createModel","model","autoupdate"],"mappings":"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","file":"auditz.js","sourcesContent":["import _debug from './debug';\nconst assert = require('assert');\n\nconst debug = _debug();\nconst warn = (options, ...rest) => {\n  if (!options.silenceWarnings) {\n    console.warn(...rest);\n  }\n};\n\nObject.compare = function(obj1, obj2) {\n\t//Loop through properties in object 1\n\t      for (var p in obj1) {\n\t\t//Check property exists on both objects\n\t\t      if (obj1.hasOwnProperty(p) !== obj2.hasOwnProperty(p)) return false;\n  if (obj1[p] === null || obj2[p] === null) {\n    return obj1[p] === obj2[p];\n  }\n\n\t\t      switch (typeof (obj1[p])) {\n\t\t\t//Deep compare objects\n\t\t\tcase 'object':\n  if (typeof (obj2[p]) !== 'object') return false;\n\t\t\t\t      if (!Object.compare(obj1[p], obj2[p])) return false;\n\t\t\t\t      break;\n\t\t\t//Compare function code\n\t\t\tcase 'function':\n\t\t\t\t      if (typeof (obj2[p]) === 'undefined' || (p !== 'compare' && obj1[p].toString() !== obj2[p].toString())) return false;\n\t\t\t\t      break;\n\t\t\t//Compare values\n\t\t\tdefault:\n\t\t\t\t      if (obj1[p] !== obj2[p]) return false;\n\t\t}\n\t}\n\n\t//Check object 2 for any extra properties\n\t      for (var p in obj2) {\n\t\t      if (typeof (obj1[p]) === 'undefined') return false;\n\t}\n\t      return true;\n};\n\nexport default (Model, bootOptions = {}) => {\n  debug('Auditz mixin for Model %s', Model.modelName);\n  let app;\n\n  const options = Object.assign({\n    createdAt: 'createdAt',\n    updatedAt: 'updatedAt',\n    deletedAt: 'deletedAt',\n    createdBy: 'createdBy',\n    updatedBy: 'updatedBy',\n    deletedBy: 'deletedBy',\n    softDelete: true,\n    unknownUser: '0',\n    remoteCtx: 'remoteCtx',\n    scrub: false,\n    required: true,\n    validateUpsert: false, // default to turning validation off\n    silenceWarnings: false,\n    revisions: {\n      name: 'revisions',\n      idType: 'Number',\n      dataSource: 'db',\n      autoUpdate: true,\n    },\n  }, bootOptions);\n\n  options.revisionsModelName = (typeof options.revisions === 'object' && options.revisions.name) ?\n    options.revisions.name : null;\n  debug('options', options);\n\n  const properties = Model.definition.properties;\n  const idName = Model.dataSource.idName(Model.modelName);\n\n  let scrubbed = {};\n  if (options.softDelete) {\n    if (options.scrub !== false) {\n      let propertiesToScrub = options.scrub;\n      if (!Array.isArray(propertiesToScrub)) {\n        propertiesToScrub = Object.keys(properties)\n          .filter(prop => !properties[prop][idName] && prop !== options.deletedAt && prop !== options.deletedBy);\n      }\n      scrubbed = propertiesToScrub.reduce((obj, prop) => ({ ...obj, [prop]: null }), {});\n    }\n  }\n\n  if (!options.validateUpsert && Model.settings.validateUpsert) {\n    Model.settings.validateUpsert = false;\n    warn(options, `${Model.pluralModelName} settings.validateUpsert was overridden to false`);\n  }\n\n  if (Model.settings.validateUpsert && options.required) {\n    warn(options, `Upserts for ${Model.pluralModelName} will fail when\n          validation is turned on and time stamps are required`);\n  }\n\n  Model.settings.validateUpsert = options.validateUpsert;\n\n  if (options.createdAt !== false) {\n    if (typeof(properties[options.createdAt]) === 'undefined') {\n      Model.defineProperty(options.createdAt, {type: Date, required: options.required, defaultFn: 'now'});\n    }\n  }\n\n  if (options.updatedAt !== false) {\n    if (typeof(properties[options.updatedAt]) === 'undefined') {\n      Model.defineProperty(options.updatedAt, {type: Date, required: options.required});\n    }\n  }\n\n  if (options.createdBy !== false) {\n    if (typeof(properties[options.createdBy]) === 'undefined') {\n      Model.defineProperty(options.createdBy, {type: String, required: false});\n    }\n  }\n\n  if (options.updatedBy !== false) {\n    if (typeof(properties[options.updatedBy]) === 'undefined') {\n      Model.defineProperty(options.updatedBy, {type: String, required: false});\n    }\n  }\n\n  if (options.softDelete) {\n    if (typeof(properties[options.deletedAt]) === 'undefined') {\n      Model.defineProperty(options.deletedAt, { type: Date, required: false, defaultFn: null });\n    }\n    if (typeof(properties[options.deletedBy]) === 'undefined') {\n      Model.defineProperty(options.deletedBy, {type: String, required: false});\n    }\n  }\n\n  Model.observe('after save', (ctx, next) => {\n    if (!options.revisions) {\n      return next();\n    }\n    debug('ctx.options', ctx.options);\n\n    // determine the currently logged in user. Default to options.unknownUser\n    let currentUser = options.unknownUser;\n\n\n    if (ctx.options.accessToken) {\n      currentUser = ctx.options.accessToken.userId;\n    }\n\n    Model.getApp((err, a) => {\n      if (err) { return next(err); }\n      app = a;\n      let ipForwarded = '';\n      let ip = '127.0.0.1';\n      if (ctx.options.ip || ctx.options.ipForwarded) {\n        ipForwarded = ctx.options.ipForwarded;\n        ip = ctx.options.ip;\n      }\n      let groups = options.revisions.groups;\n\n      let saveGroups = function(err) {\n        if (err) {\n          next(err);\n          return;\n        }\n        if (groups && Array.isArray(groups)) {\n          let count = 0;\n          if (!(ctx.options && ctx.options.delete)) {\n            groups.forEach(function(group) {\n              createOrUpdateRevision(ctx, group, currentUser, ipForwarded, ip, function() {\n                  count += 1;\n                  if (count === groups.length) {\n                      next();\n                    }\n                });\n            });\n            return;\n          }\n        }\n        next();\n      };\n\n      // If it's a new instance, set the createdBy to currentUser\n      if (ctx.isNewInstance) {\n        app.models[options.revisionsModelName].create({\n          action: 'create',\n          table_name: Model.modelName,\n          row_id: ctx.instance.id,\n          old: null,\n          new: ctx.instance,\n          user: currentUser,\n          ip: ip,\n          ip_forwarded: ipForwarded,\n        }, saveGroups);\n      } else {\n        if (ctx.options && ctx.options.delete) {\n          if (ctx.options.oldInstance) {\n            app.models[options.revisionsModelName].create({\n              action: 'delete',\n              table_name: Model.modelName,\n              row_id: ctx.options.oldInstance.id,\n              old: ctx.options.oldInstance,\n              new: null,\n              user: currentUser,\n              ip: ip,\n              ip_forwarded: ipForwarded,\n            }, saveGroups);\n          } else if (ctx.options.oldInstances) {\n            const entries = ctx.options.oldInstances.map(inst => {\n              return {\n                action: 'delete',\n                table_name: Model.modelName,\n                row_id: inst.id,\n                old: inst,\n                new: null,\n                user: currentUser,\n                ip: ip,\n                ip_forwarded: ipForwarded,\n              };\n            });\n            app.models[options.revisionsModelName].create(entries, saveGroups);\n          } else {\n            debug('Cannot register delete without old instance! Options: %j', ctx.options);\n            return saveGroups();\n          }\n        } else {\n          if (ctx.options.oldInstance && ctx.instance) {\n            const inst = ctx.instance;\n            app.models[options.revisionsModelName].create({\n              action: 'update',\n              table_name: Model.modelName,\n              row_id: inst.id,\n              old: ctx.options.oldInstance,\n              new: inst,\n              user: currentUser,\n              ip: ip,\n              ip_forwarded: ipForwarded,\n            }, saveGroups);\n          } else if (ctx.options.oldInstances) {\n            const updatedIds = ctx.options.oldInstances.map(inst => { return inst.id; });\n            let newInst = {};\n            const query = {where: {[ idName ]: {inq: updatedIds}}};\n            app.models[Model.modelName].find(query, (error, newInstances) => {\n              if (error) { return next(error); }\n              newInstances.forEach(inst => {\n                newInst[ inst[ idName ] ] = inst;\n              });\n              const entries = ctx.options.oldInstances.map(inst => {\n                return {\n                  action: 'update',\n                  table_name: Model.modelName,\n                  row_id: inst.id,\n                  old: inst,\n                  new: newInst[inst.id],\n                  user: currentUser,\n                  ip: ip,\n                  ip_forwarded: ipForwarded,\n                };\n              });\n              app.models[options.revisionsModelName].create(entries, saveGroups);\n            });\n          } else {\n            debug('Cannot register update without old and new instance. Options: %j', ctx.options);\n            debug('instance: %j', ctx.instance);\n            debug('data: %j', ctx.data);\n            return saveGroups();\n          }\n        }\n      }\n    });\n  });\n\n  function cloneKey(key, from, to) {\n    let parts = key.split('.');\n\n    let toObject = to;\n    let fromObject = from;\n\n    parts.forEach(function(key, index) {\n      if (index === parts.length - 1) {\n        toObject[key] = fromObject && fromObject[key];\n      } else {\n        if (!toObject[key]) {\n          toObject[key] = {};\n        }\n      }\n\n      fromObject = fromObject && fromObject[key];\n      toObject = toObject[key];\n    });\n  }\n\n  function createOrUpdateRevision(ctx, group, currentUser, ipForwarded, ip, cb) {\n    let data = {};\n    group.properties.forEach(function(key) {\n      cloneKey(key, ctx.instance, data);\n    });\n    debug(data);\n\n    let rec = {\n      table_name: Model.modelName,\n      row_id: ctx.instance.id,\n      new: data,\n      user: currentUser,\n      ip: ip,\n      ip_forwarded: ipForwarded,\n    };\n\n    if (ctx.isNewInstance) {\n      rec.action = 'create';\n      rec.old = null;\n      app.models[group.name].create(rec, cb);\n    } else {\n      rec.action = 'update';\n      rec.old = ctx.options.oldInstance || null;\n      if (rec.old) {\n        let old = {};\n        //make sure the object is pure\n        group.properties.forEach(function(key) {\n          cloneKey(key, rec.old, old);\n        });\n        rec.old = old;\n      }\n\n      //get away from undefined properties so compare can work\n      let recNew = JSON.parse(JSON.stringify(rec.new));\n      let recOld = rec.old && JSON.parse(JSON.stringify(rec.old));\n\n      if (rec.old && Object.compare(recNew, recOld)) {\n        console.log('equal ' + group.name);\n        return cb();\n      }\n      app.models[group.name].create(rec, cb);\n    }\n  }\n\n  function getOldInstance(ctx, cb) {\n    if (options.revisions) {\n      if (typeof ctx.isNewInstance === 'undefined' || !ctx.isNewInstance) {\n        let id = ctx.instance ? ctx.instance.id : null;\n        if (!id) {\n          id = ctx.data ? ctx.data.id : null;\n        }\n        if (!id && ctx.where) {\n          id = ctx.where.id;\n        }\n        if (!id && ctx.options.remoteCtx) {\n          id = ctx.options.remoteCtx.req && ctx.options.remoteCtx.req.args ?\n            ctx.options.remoteCtx.req.args.id : null;\n        }\n        if (id) {\n          Model.findById(id, {deleted: true}, (err, oldInstance) => {\n            if (err) { cb(err); } else { cb(null, oldInstance); }\n          });\n        } else {\n          const query = {where: ctx.where} || {};\n          Model.find(query, (err, oldInstances) => {\n            if (err) {\n              cb(err);\n            } else {\n              if (oldInstances.length > 1) {\n                return cb(null, oldInstances);\n              } else if (oldInstances.length === 0) {\n                return cb();\n              }\n              cb(null, oldInstances[0]);\n            }\n          });\n        }\n      } else {\n        cb();\n      }\n    } else {\n      cb();\n    }\n  }\n\n  Model.observe('before save', (ctx, next) => {\n    const softDelete = ctx.options.delete;\n\n    getOldInstance(ctx, (err, result) => {\n      if (err) {\n        console.error(err);\n        return next(err);\n      }\n\n      if (Array.isArray(result)) {\n        ctx.options.oldInstances = result;\n      } else {\n        ctx.options.oldInstance = result;\n      }\n      // determine the currently logged in user. Default to options.unknownUser\n      let currentUser = options.unknownUser;\n\n      if (ctx.options.accessToken) {\n        currentUser = ctx.options.accessToken.userId;\n      }\n\n      // If it's a new instance, set the createdBy to currentUser\n      if (ctx.isNewInstance) {\n        debug('Setting %s.%s to %s', ctx.Model.modelName, options.createdBy, currentUser);\n        ctx.instance[options.createdBy] = currentUser;\n        if (options.softDelete) {\n          ctx.instance[options.deletedAt] = null;\n        }\n      } else {\n        // if the createdBy and createdAt are sent along in the data to save, remove the keys\n        // as we don't want to let the user overwrite it\n        if (ctx.instance) {\n          delete ctx.instance[options.createdBy];\n          delete ctx.instance[options.createdAt];\n        } else {\n          delete ctx.data[options.createdBy];\n          delete ctx.data[options.createdAt];\n        }\n      }\n\n      if (ctx.options && ctx.options.skipUpdatedAt) { return next(); }\n      let keyAt = options.updatedAt;\n      let keyBy = options.updatedBy;\n      if (options.softDelete) {\n        // Since soft deletes replace the actual delete by an update, we set the option\n        // 'delete' in the overridden delete functions that perform updates.\n        // We now have to determine if we need to set updatedAt/updatedBy or\n        // deletedAt/deletedBy\n        if (softDelete) {\n          keyAt = options.deletedAt;\n          keyBy = options.deletedBy;\n        }\n      }\n\n      let obj;\n      if (ctx.instance) {\n        obj = ctx.instance;\n      } else {\n        obj = ctx.data;\n      }\n\n      if (keyAt !== false) {\n        obj[keyAt] = new Date();\n      }\n      if (keyBy !== false) {\n        obj[keyBy] = currentUser;\n      }\n\n      return next();\n    });\n  });\n\n  if (options.softDelete) {\n    Model.destroyAll = function softDestroyAll(where, opt, cb) {\n      let query = where || {};\n      let callback = (cb === undefined && typeof opt === 'function') ? opt : cb;\n      let newOpt = {delete: true};\n      if (typeof opt === 'object') {\n        newOpt = {...opt, ...newOpt};\n      }\n      if (typeof where === 'function') {\n        callback = where;\n        query = {};\n      }\n      return Model.updateAll(query, { ...scrubbed }, newOpt)\n        .then(result => (typeof callback === 'function') ? callback(null, result) : result)\n        .catch(error => (typeof callback === 'function') ? callback(error) : Promise.reject(error));\n    };\n\n    Model.remove = Model.destroyAll;\n    Model.deleteAll = Model.destroyAll;\n\n    Model.destroyById = function softDestroyById(id, opt, cb) {\n      const callback = (cb === undefined && typeof opt === 'function') ? opt : cb;\n      let newOpt = {delete: true};\n      if (typeof opt === 'object') {\n        newOpt = {...opt, ...newOpt};\n      }\n\n      return Model.updateAll({ [idName]: id }, { ...scrubbed}, newOpt)\n        .then(result => (typeof callback === 'function') ? callback(null, result) : result)\n        .catch(error => (typeof callback === 'function') ? callback(error) : Promise.reject(error));\n    };\n\n    Model.removeById = Model.destroyById;\n    Model.deleteById = Model.destroyById;\n\n    Model.prototype.destroy = function softDestroy(opt, cb) {\n      const callback = (cb === undefined && typeof opt === 'function') ? opt : cb;\n\n      return this.updateAttributes({ ...scrubbed }, {delete: true})\n        .then(result => (typeof cb === 'function') ? callback(null, result) : result)\n        .catch(error => (typeof cb === 'function') ? callback(error) : Promise.reject(error));\n    };\n\n    Model.prototype.remove = Model.prototype.destroy;\n    Model.prototype.delete = Model.prototype.destroy;\n\n    // Emulate default scope but with more flexibility.\n    const queryNonDeleted = {[options.deletedAt]: null};\n\n    const _findOrCreate = Model.findOrCreate;\n    Model.findOrCreate = function findOrCreateDeleted(query = {}, ...rest) {\n      if (!query.deleted) {\n        if (!query.where || Object.keys(query.where).length === 0) {\n          query.where = queryNonDeleted;\n        } else {\n          query.where = { and: [ query.where, queryNonDeleted ] };\n        }\n      }\n\n      return _findOrCreate.call(Model, query, ...rest);\n    };\n\n    const _find = Model.find;\n    Model.find = function findDeleted(query = {}, ...rest) {\n      if (!query.deleted) {\n        if (!query.where || Object.keys(query.where).length === 0) {\n          query.where = queryNonDeleted;\n        } else {\n          query.where = { and: [ query.where, queryNonDeleted ] };\n        }\n      }\n\n      return _find.call(Model, query, ...rest);\n    };\n\n    const _count = Model.count;\n    Model.count = function countDeleted(where = {}, ...rest) {\n      // Because count only receives a 'where', there's nowhere to ask for the deleted entities.\n      let whereNotDeleted;\n      if (!where || Object.keys(where).length === 0) {\n        whereNotDeleted = queryNonDeleted;\n      } else {\n        whereNotDeleted = { and: [ where, queryNonDeleted ] };\n      }\n      return _count.call(Model, whereNotDeleted, ...rest);\n    };\n\n    const _update = Model.update;\n    Model.update = Model.updateAll = function updateDeleted(where = {}, ...rest) {\n      // Because update/updateAll only receives a 'where', there's nowhere to ask for the deleted entities.\n      let whereNotDeleted;\n      if (!where || Object.keys(where).length === 0) {\n        whereNotDeleted = queryNonDeleted;\n      } else {\n        whereNotDeleted = { and: [ where, queryNonDeleted ] };\n      }\n      return _update.call(Model, whereNotDeleted, ...rest);\n    };\n  }\n\n  function _setupRevisionsModel(app, opts) {\n    const autoUpdate = (opts.revisions === true || (typeof opts.revisions === 'object' && opts.revisions.autoUpdate));\n    const dsName = (typeof opts.revisions === 'object' && opts.revisions.dataSource) ?\n      opts.revisions.dataSource : 'db';\n    const rowIdType = (typeof opts.revisions === 'object' && opts.revisions.idType) ?\n      opts.revisions.idType : 'Number';\n\n    if (options.revisionsModelName) {\n      _createModel(opts, dsName, autoUpdate, rowIdType, {name: options.revisionsModelName});\n    }\n    if (opts.revisions && typeof opts.revisions === 'object' &&\n       opts.revisions.groups && opts.revisions.groups.length) {\n      opts.revisions.groups.forEach(function(group) {\n        if (!app.models[group.name]) {\n          _createModel(opts, dsName, autoUpdate, rowIdType, group);\n        }\n      });\n    }\n  }\n\n  function _createModel(opts, dsName, autoUpdate, rowIdType, group) {\n    const revisionsDef = require('./models/revision.json');\n    let settings = {};\n    for (let s in revisionsDef) {\n      if (s !== 'name' && s !== 'properties') {\n        settings[s] = revisionsDef[s];\n      }\n    }\n\n    settings['plural'] = group.plural;\n\n    revisionsDef.properties.row_id.type = rowIdType;\n\n    const revisionsModel = app.dataSources[dsName].createModel(\n      group.name,\n      revisionsDef.properties,\n      settings\n    );\n    const revisions = require('./models/revision')(revisionsModel, opts);\n\n    app.model(revisions);\n\n\n    if (autoUpdate) {\n      // create or update the revisions table\n      app.dataSources[dsName].autoupdate([group.name], (error) => {\n        if (error) {console.error(error);}\n      });\n    }\n  }\n\n  if (options.revisions) {\n    Model.getApp((err, a) => {\n      if (err) { return console.error(err);}\n      app = a;\n      if (!app.models[options.revisionsModelName]) {\n        _setupRevisionsModel(app, options);\n      }\n    });\n  }\n};\n"],"sourceRoot":"/Volumes/Projects/Projects/loopback-auditz/src"}